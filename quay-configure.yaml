---
- name: Create org and repos
  gather_facts: no
  ignore_errors: yes
  hosts: localhost
  vars:
    ansible_remote_tmp: /runner/.ansible/tmp
    quay_namespace: quay-operator
    quay_route: http://registry-quay-app
    quay_user_password: openshift
  tasks:

    - name: create organization
      herve4m.quay.quay_organization:
        name: "workshop{{ item }}"
        email: "workshop{{ item }}@workshop-noreply.com"
        time_machine_expiration: "14d"
        state: present
        quay_host: "{{ quay_route }}"
        quay_token: "{{ access_token }}"
      with_sequence: 1-{{ users }}

    - name: Create teams
      herve4m.quay.quay_team:
        name: "team{{ item }}"
        organization: "workshop{{ item }}"
        description: "user{{ item }} team"
        role: "creator"
        append: false
        state: present
        quay_host: "{{ quay_route }}"
        quay_token: "{{ access_token }}"
      with_sequence: 1-{{ users }}

    # Update later once we figure out what image repos are needed
    - name: create test repositories
      herve4m.quay.quay_repository:
        name: "workshop{{ item }}/test"
        description: "Test Repository"
        perms:
          - name: team{{ item }}
            type: team
            role: admin
        state: present
        quay_host: "{{ quay_route }}"
        quay_token: "{{ access_token }}"
        visibility: "public"
      with_sequence: 1-{{ users }}

    # Enable OIDC Team synchronization for all teams
    - name: enable OIDC team synchronization
      herve4m.quay.quay_team_oidc:
        name: team{{ item }}
        organization: workshop{{ item }}
        sync: true
        group_name: team{{ item }}
        quay_host: "{{ quay_route }}"
        quay_token: "{{ access_token }}"
      with_sequence: 1-{{ users }}

    # Generate token to pull images, note this generates
    # a shared token that will work across all repos since
    # it is tied to the superuser. It's not possible to
    # automate this on a per user basis with OIDC since
    # the users don't exist until they login
    - name: Ensure the token exists for my account
      herve4m.quay.quay_docker_token:
        name: token_for_pull
        state: present
        token_code: c82ad1b6-4a41-4ad9-893e-c56791430fc9
        quay_host: "{{ quay_route }}"
        quay_token: "{{ access_token }}"
      register: token_details

    - debug:
        msg: Docker token is {token_details}

    # - name: get Config Bundle data
    #   kubernetes.core.k8s_info:
    #     api_version: v1
    #     kind: Secret
    #     name: config-bundle-secret
    #     namespace: "{{ quay_namespace }}"
    #   register: config_bundle

    # - name: Fetch config_bundle secret
    #   set_fact:
    #     config_bundle_secret: "{{ query('kubernetes.core.k8s', kind='Secret', namespace='quay-operator', resource_name='config-bundle-secret') }}"

    # - name: Get config_bundle data
    #   set_fact:
    #     config_bundle: "{{ config_bundle_secret | json_query('[0].data.\"config.yaml\"') | b64decode }}"

    # - debug:
    #     msg: "{{ config_bundle }}"

    # - name: Update bundle with AUTHENTICATION_TYPE
    #   k8s:
    #     state: present
    #     definition:
    #       apiVersion: v1
    #       kind: Secret
    #       metadata:
    #         name: config-bundle-secret
    #         namespace: "{{ quay_namespace }}"
    #       data:
    #         config.yaml: "{{ ('AUTHENTICATION_TYPE: OIDC\n' ~ config_bundle) | b64encode }}"
    #       type: Opaque

    - name: Set flag
      set_fact: flag = failed
      when: "'FAILED' in command_result.stderr"
